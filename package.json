{
    "name": "sts-ooi",
    "version": "1.0.0",
    "main": "index.js",
    "license": "MIT",
    "devDependencies": {
        "webpack-dev-server": "^3.11.0"
    },
    "dependencies": {
        "@babel/cli": "^7.8.4",
        "@babel/core": "^7.9.6",
        "@babel/plugin-proposal-class-properties": "^7.8.3",
        "@babel/plugin-proposal-export-default-from": "^7.8.3",
        "@babel/preset-env": "^7.9.6",
        "atlaspack": "^1.0.0",
        "babel-loader": "^8.1.0",
        "babel-plugin-lodash": "^3.3.4",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "clean-webpack-plugin": "^1.0.1",
        "copy-webpack-plugin": "^5.1.1",
        "css-loader": "^2.1.1",
        "file-loader": "^3.0.1",
        "html-webpack-plugin": "^5.5.0",
        "import-http": "^0.3.1",
        "jdenticon": "^2.2.0",
        "json-loader": "^0.5.7",
        "localforage": "^1.7.3",
        "lodash": "^4.17.15",
        "mini-css-extract-plugin": "^0.5.0",
        "mithril": "^2.0.4",
        "ncp": "^2.0.0",
        "onchange": "^5.2.0",
        "optimize-css-assets-webpack-plugin": "^5.0.3",
        "rimraf": "^2.7.1",
        "script-loader": "^0.7.2",
        "seedrandom": "^3.0.5",
        "style-loader": "^0.23.1",
        "terser-webpack-plugin": "^1.3.0",
        "three": "^0.115.0",
        "three-fbxloader-offical": "github:jkennaly/three-fbxloader",
        "threejs-2d-components": "0.0.4",
        "url-loader": "^1.1.2",
        "uuid": "^3.4.0",
        "webgl-detector": "^1.1.11",
        "webpack": "^4.43.0",
        "webpack-cli": "^3.3.11",
        "webrtc-sdk": "^2.2.7",
        "webxr-boilerplate": "^0.2.3",
        "xxhashjs": "^0.2.2"
    },
    "scripts": {
        "watch": "onchange 'src/**/*' 'vendor/**/src/**/*' -- npm run build",
        "start": "webpack-dev-server --open",
        "set-dev": "cp webpack.config.dev.js webpack.config.js",
        "set-prod": "cp webpack.config.prod.js webpack.config.js",
        "mk-img": "mkdir dist/img",
        "mk-fav": "mkdir dist/fav",
        "cp-img": "npm run mk-img && cp src/img/* dist/img/",
        "cp-fav": "npm run mk-fav && cp fav/* dist/fav/",
        "cp-all": "npm run cp-img && npm run cp-fav",
        "build": "webpack --config webpack.config.js",
        "postbuild": "npm run cp-all"
    }
}
